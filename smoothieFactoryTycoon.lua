local player = game.Players.LocalPlayer
local playerName = player.Name
local _, library = pcall(loadstring(game:HttpGet("https://raw.githubusercontent.com/TrixAde/Osmium/main/OsmiumLibrary.lua")))
local window = library:CreateWindow("Smoothie Factory Tycoon GUI")
local tab = window:CreateTab("Main")

-- local easyObbyTime = workspace.Obbies.EasyObby.Decorations.ObbySign.Border.Timer.Time.Text
-- local hardObbyTime = workspace.Obbies.HardObby.Decorations.ObbySign.Border.Timer.Time.Text

-- local easyTimeLabel = tab:CreateLabel("Easy Time ")
-- local hardTimeLabel = tab:CreateLabel("Hard Time ")

local function timeStringToSeconds(timeString)
    local minutes, seconds = timeString:match("(%d+):(%d+)")
    minutes = tonumber(minutes) or 0
    seconds = tonumber(seconds) or 0

    return minutes * 60 + seconds
end

local function tpEasy()
    local currentLocation = player.Character.HumanoidRootPart.CFrame
    local destination = workspace.Obbies.EasyObby.Finish.Button.CFrame
    player.Character:MoveTo(destination.Position)
    wait(0.5)
    player.Character:MoveTo(currentLocation.Position)
end

local function tpHard()
    local currentLocation = player.Character.HumanoidRootPart.CFrame
    local destination = workspace.Obbies.HardObby.Finish.Button.CFrame
    player.Character:MoveTo(destination.Position)
    wait(0.5)
    player.Character:MoveTo(currentLocation.Position)
end

-- local tpEasyBtn = tab:CreateButton("Teleport to Easy", tpEasy)
-- local tpHardBtn = tab:CreateButton("Teleport to Hard", tpHard)

local rTreeBtn = tab:CreateButton("Remove Trees", function()
    if workspace.AreaDecor:FindFirstChild('GreenTrees') then
        workspace.AreaDecor['GreenTrees']:Destroy()
    end
end)

local rFactory = tab:CreateButton("Remove Factory Objects", function()
local tycoonFolder = game.Workspace:FindFirstChild("Tycoons")
    if tycoonFolder then
        for _, tycoon in ipairs(tycoonFolder:GetChildren()) do
            local ownerName = tycoon.Owner.Value
            -- print(typeof(ownerName))
            if ownerName then
                ownerName = tostring(ownerName)
                if (ownerName == playerName) then
                    if tycoon.Foliage:FindFirstChild('Trees') then
                        tycoon.Foliage['Trees']:Destroy()
                    end
                    for _, child in ipairs(tycoon.Factory.Factory:GetChildren()) do
                        if child.Name ~= "Foundation" and child.Name ~= "Wedge" and child.Name ~= "BackWall" then
                            child:Destroy()
                        end
                    end
                    -- for _, child in ipairs(tycoon.Factory.Factory.BackWall:GetChildren()) do
                    --     if child.Name ~= "Conveyor" then
                    --         child:Destroy()
                    --     end
                    -- end
                    -- static
                    if tycoon:FindFirstChild('AutoBlendSign') then
                        tycoon['AutoBlendSign']:Destroy()
                    end
                    if tycoon:FindFirstChild('AutoBlendSign') then
                        tycoon['AutoBlendSign']:Destroy()
                    end
                    if tycoon:FindFirstChild('TycoonWalls') then
                        tycoon['TycoonWalls']:Destroy()
                    end

                    if tycoon.PurchaseButtons:FindFirstChild("Toggle Door Gamepass") then
                        tycoon.PurchaseButtons["Toggle Door Gamepass"]:Destroy()
                    end
                    if tycoon.PurchaseButtons:FindFirstChild("Gold Blender") then
                        tycoon.PurchaseButtons["Gold Blender"]:Destroy()
                    end
                    
                    for i = 1, 3 do
                        if tycoon.PurchaseButtons:FindFirstChild("Gold Dropper " .. i) then
                            tycoon.PurchaseButtons["Gold Dropper " .. i]:Destroy()
                        end
                    end
                    if tycoon.PurchaseButtons:FindFirstChild("Rainbow Upgrader") then
                        tycoon.PurchaseButtons["Rainbow Upgrader"]:Destroy()
                    end
                    if tycoon.PurchaseButtons:FindFirstChild("Rainbow Upgrader (Basement)") then
                        tycoon.PurchaseButtons["Rainbow Upgrader (Basement)"]:Destroy()
                    end
                    if tycoon.JarFactory:FindFirstChild("DoorEntry") then
                        tycoon.JarFactory["DoorEntry"]:Destroy()
                    end
                    if tycoon.JarFactory2:FindFirstChild("DoorEntry") then
                        tycoon.JarFactory2["DoorEntry"]:Destroy()
                    end
                    if tycoon.UpgradeButtons:FindFirstChild("UpgradeFactoryDoorLength") then
                        tycoon.UpgradeButtons["UpgradeFactoryDoorLength"]:Destroy()
                    end
                    if tycoon.UpgradeButtons:FindFirstChild("UpgradeFactoryDoorLength2") then
                        tycoon.UpgradeButtons["UpgradeFactoryDoorLength2"]:Destroy()
                    end
                end
            end
        end
    end
end)

local autoTpBtn = tab:CreateButton("AutoObby", function()
    task.spawn(function()
        while wait(1) do
            local easyObbyOpen = not workspace.Obbies.EasyObby.Decorations.ObbySign.Border.CanCollide
            local hardObbyOpen = not workspace.Obbies.HardObby.Decorations.ObbySign.Border.CanCollide
            if easyObbyOpen then tpEasy() end
            if hardObbyOpen then tpHard() end
        end
    end)
end)


-- task.spawn(function()
--     while wait(1) do
--         local easyObbyOpen = not workspace.Obbies.EasyObby.Decorations.ObbySign.Border.CanCollide
--         local hardObbyOpen = not workspace.Obbies.HardObby.Decorations.ObbySign.Border.CanCollide
--         -- print(easyObbyOpen, hardObbyOpen)
--         easyObbyTime = workspace.Obbies.EasyObby.Decorations.ObbySign.Border.Timer.Time.Text
--         hardObbyTime = workspace.Obbies.HardObby.Decorations.ObbySign.Border.Timer.Time.Text

--         if easyObbyOpen then easyObbyTime = "Open" end
--         if hardObbyOpen then hardObbyTime = "Open" end

--         easyTimeLabel:SetTitle("Easy Time " .. easyObbyTime)
--         hardTimeLabel:SetTitle("Hard Time " .. hardObbyTime)
--     end
-- end)
